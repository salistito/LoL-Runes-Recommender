TAREA 1: Buscador de imagenes duplicadas

Sobre procesar.py:

Con el fin de obtener mejores resultados se decide utilizar el descriptor HOG,
con clusters horizontales. S es coge lo anterior ya que para el caso solo se
presentarán flips horizontales y debería ser robusto a las demás transformaciones
en la tarea.

Se decide implementar el descriptor con 5 clusters y se calcula su respectivo
histograma con 16 bins. Se concatenan los resultados, se añade el nombre de la
imagen que representan y se guardan los datos utilizando la función numpy.savetxt()


Sobre buscar.py:

Inicialmente se carga el contenido calculado del dataset de imagenes R, luego similar a
lo descrito anterior se calcula el descriptor de cada imagen y luego se ejecuta la función
auxiliar getDuplicate(img) el cual recibe una imagen (como matriz), calcula la distancia
L1 o Manhattan entre esa imagen y las del conjunto R y almacena la de menor valor.
Finalmente retorna la distancia y el nombre de la imagen en R que corresponde a dicho
cálculo.



Luego de obtener la imagen duplicada junto a la distancia, se almacenan los valores en
un arreglo y se retorna en función del formato solicitado.


COMPILACIÓN:
se puede ejecutar la tarea con:

python tarea1-test.py


RESULTADOS OBTENIDOS:

En general se obtienen buenos resultados, de inmediato se puede atribuir los fallos
a la cantidad de clusters y los bins dado a los histrogramas, sin embargo, estos no se
aumentan para mayor precisión con el fin de no extender el tiempo de ejecución y
así respetar el límite máximo de media hora.

Se adjuntan resultados a continuación:


--------------------------------DATASET A----------------------------------

Evaluando resultados_dataset_a.txt con dataset_a/gt.txt
dataset_a/gt.txt cargado ok
1000 detecciones en resultados_dataset_a.txt

Resultado logrado = 585 correctas de 800 (73%)
==> Nota calidad resultados = 6.8   (pondera 60% en nota final de la tarea)

Resultados por tipo de query
    Q-QUALITY     = 197 (98%)
    C-CROP+TEXT   = 132 (66%)
    G-GAMMA+TEXT  =  62 (31%)
    F-FLIP+TEXT   = 194 (97%)

Las primeras 10 respuestas incorrectas:
    a0812.jpg 	 im3096.jpg 	 1399.0	(según GT es im4089.jpg) (tipo=C)
    a0905.jpg 	 im20851.jpg 	 1619.0	(según GT es -)
    a0952.jpg 	 im5791.jpg 	 1746.0	(según GT es im17328.jpg) (tipo=C)
    a0575.jpg 	 im10655.jpg 	 1831.0	(según GT es -)
    a0960.jpg 	 im12351.jpg 	 1848.0	(según GT es -)
    a0865.jpg 	 im2355.jpg 	 1866.0	(según GT es -)
    a0727.jpg 	 im4570.jpg 	 2113.0	(según GT es im15731.jpg) (tipo=C)
    a0500.jpg 	 im5668.jpg 	 2128.0	(según GT es -)
    a0830.jpg 	 im5018.jpg 	 2346.0	(según GT es -)
    a0193.jpg 	 im9414.jpg 	 2356.0	(según GT es im8413.jpg) (tipo=G)

Mejor Precision con:
    distancia_umbral=1394.0000  respuestas=248 (correctas=248 incorrectas=0)
    precision=1.00  recall=0.31  F1=0.47

Mejor F1 con:
    distancia_umbral=3350.0000  respuestas=600 (correctas=519 incorrectas=81)
    precision=0.86  recall=0.65  F1=0.74


--------------------------------DATASET B----------------------------------


dataset_b/gt.txt cargado ok
1000 detecciones en resultados_dataset_b.txt

Resultado logrado = 601 correctas de 800 (75%)
==> Nota calidad resultados = 7.0   (pondera 60% en nota final de la tarea)

Resultados por tipo de query
    Q-QUALITY     = 198 (99%)
    C-CROP+TEXT   = 154 (77%)
    G-GAMMA+TEXT  =  52 (26%)
    F-FLIP+TEXT   = 197 (98%)

Las primeras 10 respuestas incorrectas:
    b0101.jpg 	 im19561.jpg 	 1076.0	(según GT es im10159.jpg) (tipo=Q)
    b0640.jpg 	 im17479.jpg 	 1764.0	(según GT es -)
    b0970.jpg 	 im21555.jpg 	 1820.0	(según GT es -)
    b0743.jpg 	 im17555.jpg 	 1895.0	(según GT es im23550.jpg) (tipo=G)
    b0775.jpg 	 im21659.jpg 	 1923.0	(según GT es -)
    b0220.jpg 	 im16669.jpg 	 1998.0	(según GT es -)
    b0770.jpg 	 im9273.jpg 	 2136.0	(según GT es -)
    b0105.jpg 	 im9893.jpg 	 2188.0	(según GT es -)
    b0295.jpg 	 im17555.jpg 	 2214.0	(según GT es -)
    b0325.jpg 	 im9978.jpg 	 2316.0	(según GT es -)

Mejor Precision con:
    distancia_umbral=1075.0000  respuestas=176 (correctas=176 incorrectas=0)
    precision=1.00  recall=0.22  F1=0.36

Mejor F1 con:
    distancia_umbral=3583.0000  respuestas=660 (correctas=547 incorrectas=113)
    precision=0.83  recall=0.68  F1=0.75



--------------------------------DATASET C----------------------------------

dataset_c/gt.txt cargado ok
1000 detecciones en resultados_dataset_c.txt

Resultado logrado = 575 correctas de 800 (72%)
==> Nota calidad resultados = 6.7   (pondera 60% en nota final de la tarea)

Resultados por tipo de query
    Q-QUALITY     = 198 (99%)
    C-CROP+TEXT   = 130 (65%)
    G-GAMMA+TEXT  =  50 (25%)
    F-FLIP+TEXT   = 197 (98%)

Las primeras 10 respuestas incorrectas:
    c0150.jpg 	 im9586.jpg 	 1386.0	(según GT es -)
    c0737.jpg 	 im16191.jpg 	 1614.0	(según GT es im17569.jpg) (tipo=C)
    c0882.jpg 	 im24319.jpg 	 1712.0	(según GT es im4511.jpg) (tipo=C)
    c0340.jpg 	 im7187.jpg 	 1882.0	(según GT es -)
    c0890.jpg 	 im7187.jpg 	 1905.0	(según GT es -)
    c0285.jpg 	 im13110.jpg 	 2216.0	(según GT es -)
    c0048.jpg 	 im12532.jpg 	 2364.0	(según GT es im3164.jpg) (tipo=G)
    c0492.jpg 	 im6519.jpg 	 2380.0	(según GT es im5252.jpg) (tipo=C)
    c0505.jpg 	 im24319.jpg 	 2417.0	(según GT es -)
    c0427.jpg 	 im6519.jpg 	 2504.0	(según GT es im24142.jpg) (tipo=C)

Mejor Precision con:
    distancia_umbral=1384.0000  respuestas=250 (correctas=250 incorrectas=0)
    precision=1.00  recall=0.31  F1=0.48

Mejor F1 con:
    distancia_umbral=3300.0000  respuestas=588 (correctas=505 incorrectas=83)
    precision=0.86  recall=0.63  F1=0.73

Process finished with exit code 0
